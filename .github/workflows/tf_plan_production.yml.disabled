name: "Terraform plan production"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - "terragrunt/env/production/**"
      - ".github/workflows/tf_plan_production.yml"

env:
  AWS_REGION: ca-central-1
  TERRAFORM_VERSION: 1.10.4
  TERRAGRUNT_VERSION: 0.72.3
  TF_VAR_mongodb_uri: ${{ secrets.MONGODB_URI }}
  TF_VAR_airtable_api_key: ${{ secrets.AIRTABLE_API_KEY }}
  TF_VAR_google_service_account_key: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
  TF_VAR_airtable_base: ${{ secrets.AIRTABLE_BASE }}
  TF_VAR_health_airtable_base: ${{ secrets.HEALTH_AIRTABLE_BASE }}
  TF_VAR_cra_airtable_base: ${{ secrets.CRA_AIRTABLE_BASE }}
  TF_VAR_travel_airtable_base: ${{ secrets.TRAVEL_AIRTABLE_BASE }}
  TF_VAR_ircc_airtable_base: ${{ secrets.IRCC_AIRTABLE_BASE }}

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  terraform-plan:
    if: github.repository == 'cds-snc/dto-feedback-cj'
    strategy:
      fail-fast: false
      matrix:
        include:
          - module: network
          - module: ecr
          - module: ssm
          - module: iam
          - module: ecs
          - module: eventbridge
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform Tools
        uses: cds-snc/terraform-tools-setup@v1

      - name: Configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: arn:aws:iam::730335533085:role/feedback-cronjob-plan
          role-session-name: TFPlan
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform plan
        uses: cds-snc/terraform-plan@v3.3.2
        with:
          comment-delete: true
          comment-title: "Production: ${{ matrix.module }}"
          directory: ./terragrunt/env/production/${{ matrix.module }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          terragrunt: true
